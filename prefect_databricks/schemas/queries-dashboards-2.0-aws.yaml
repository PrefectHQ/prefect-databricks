components:
  parameters: null
  responses:
    BadRequest:
      content:
        application/json:
          schema:
            properties:
              message:
                description: Human-readable error message that describes the cause
                  of the error.
                example: The browser (or proxy) sent a request that this server could
                  not understand.
                type: string
            type: object
      description: Bad request
    Forbidden:
      content:
        text/plain; charset=utf-8:
          schema:
            description: An HTML page that describes the cause of the error.
            format: html
            type: string
      description: Forbidden request
    NotFound:
      content:
        application/json:
          schema:
            properties:
              message:
                description: Human-readable error message that describes the cause
                  of the error.
                example: The requested URL was not found on the server. If you entered
                  the URL manually please check your spelling and try again.
                type: string
            type: object
      description: Path not found
    ObjectTransferBadRequest:
      content:
        application/json:
          schema:
            properties:
              message:
                description: Human-readable error message that describes the cause
                  of the error.
                enum:
                - You must specify a new_owner by email address
                - The browser (or proxy) sent a request that this server could not
                  understand.
                type: string
            type: object
      description: Bad request
    ServerError:
      content:
        text/plain; charset=utf-8:
          schema:
            description: An HTML error page that indicates a general server error
              but does not mention the cause of the error.
            format: html
            type: string
      description: Server error
    access-control-list-response:
      content:
        application/json:
          schema:
            properties:
              access_control_list:
                $ref: '#/components/schemas/access_control_list'
              object_id:
                $ref: '#/components/schemas/object_type'
              object_type:
                $ref: '#/components/schemas/object_type_and_id'
            type: object
      description: A JSON representation of the access control list (ACL) for an object.
    generic-success-message:
      content:
        application/json:
          schema:
            properties:
              message:
                enum:
                - Success
                type: string
            type: object
      description: Generic success message
  schemas:
    access_control_list:
      example:
      - group_name: admins
        permission: CAN_MANAGE
      items:
        anyOf:
        - $ref: '#/components/schemas/user_acl'
        - $ref: '#/components/schemas/group_acl'
      type: array
    dashboard-object:
      description: A JSON representing a dashboard containing widgets of visualizations
        and text boxes.
      properties:
        can_edit:
          description: Whether the authenticated user can edit the query definition.
          example: true
          type: boolean
        created_at:
          description: Timestamp when this dashboard was created.
          format: date-time
          type: string
        dashboard_filters_enabled:
          default: false
          description: In the web application, query filters that share a name are
            coupled to a single selection box if this value is `true`.
          example: false
          type: boolean
        id:
          description: The ID for this dashboard.
          example: 4e443c27-9f61-4f2e-a12d-ea5668460bf1
          format: UUID
          type: string
        is_archived:
          description: Whether a dashboard is trashed. Trashed dashboards won't appear
            in list views.  If this boolean is `true`, the `options` property for
            this dashboard will include a `moved_to_trash_at` timestamp. Items in
            Trash are permanently deleted after 30 days.
          type: boolean
        is_draft:
          description: Whether a dashboard is a draft. Draft dashboards only appear
            in list views for their owners.
          type: boolean
        is_favorite:
          description: Whether this query object appears in the current user's favorites
            list. This flag determines whether the star icon for favorites is colored
            in.
          type: boolean
        layout:
          description: Unused field.
          example: []
          type: array
        name:
          description: The title of the dashboard that appears in list views and at
            the top of the dashboard page.
          example: Sales Dashboard
          type: string
        options:
          properties:
            moved_to_trash_at:
              description: The timestamp when this dashboard was moved to trash. Only
                present when the `is_archived` property is `true`. Trashed items are
                deleted after thirty days.
              example: '2020-12-15T18:39:15.837Z'
              format: date-time
              type: string
          type: object
        permission_tier:
          $ref: '#/components/schemas/permission_level'
        refresh_schedules:
          description: Unsupported field.
          example: []
          type: array
        slug:
          description: URL slug. Usually mirrors the query name with dashes (`-`)
            instead of spaces. Appears in the URL for this query.
          example: sales-dashboard
          type: string
        tags:
          items:
            anyOf:
            - $ref: '#/components/schemas/tag-string'
          type: array
        updated_at:
          description: Timestamp when this dashboard was last updated.
          format: date-time
          type: string
        user:
          $ref: '#/components/schemas/user-object'
        user_id:
          description: The ID of the user that created and owns this dashboard.
          example: 7878537523656153
          type: integer
        version:
          description: Unused field.
          type: string
        widgets:
          $ref: '#/components/schemas/widget-object'
      type: object
    data-source-object:
      description: A JSON object representing a DBSQL data source / SQL warehouse.
      properties:
        id:
          description: The unique identifier for this data source / SQL warehouse.
            Can be used when creating / modifying queries and dashboards.
          example: f7df1dfd-565d-4506-accb-8a1e0f8fad09
          format: UUID
          type: string
        name:
          description: The string name of this data source / SQL warehouse as it appears
            in the Databricks SQL web application
          example: starter-warehouse
          type: string
        pause_reason:
          description: Undocumented field
          example: null
          type: string
        paused:
          description: Undocumented field
          example: 0
          type: number
        supports_auto_limit:
          description: Undocumented field
          example: true
          type: boolean
        syntax:
          description: Undocumented field
          example: sql
          type: string
        type:
          description: Undocumented field
          example: databricks_internal
          type: string
        view_only:
          description: Undocumented field
          example: false
          type: boolean
        warehouse_id:
          description: Undocumented field
          example: 3d939b0cc668be06
          type: string
    date-parameter-value:
      properties:
        name:
          description: The name of this parameter that appears between curly braces
            in the query definition.
          type: string
        value:
          description: 'Date value in format as defined by RFC 3339, section 5.6.
            The required granularity of date and time depends on the resolution expected
            by the parameter: date, date and time, or date and time with seconds.'
          example: '1991-08-03 09:21:21'
          format: date-time
          type: string
      type: object
    dropdown-parameter-value:
      properties:
        name:
          description: The name of this parameter that appears between curly braces
            in the query definition.
          type: string
        value:
          oneOf:
          - description: If the dropdown parameter does not support multi-select,
              provide a single string value. If it supports multi-select, use the
              `Array` field.
            example: param
            name: string-dropdown-value
            type: string
          - items:
              description: If the dropdown parameter supports multi-select then values
                can be passed as an array of strings. If it does not, use the `string`
                field.
              type: string
            name: array-dropdown-value
            type: array
      type: object
    group_acl:
      properties:
        group_name:
          example: admins
          type: string
        permission_level:
          $ref: '#/components/schemas/permission_level'
      type: object
    integer_max_100:
      example: 50
      type: integer
    job-object:
      description: A JSON object that represents the status of a query run job.
      properties:
        error:
          description: Error message. This is `null` unless the job has a `FAILURE`
            status (code 4). This is the error that resulted in the failure.
          example: null
          type: string
        id:
          description: A tuple of the organization ID, user ID, and query ID.
          example: org:6051921418418893:user:899619779028913:id:cb9a11e8-68c4-4531-8d0c-104b921f7306
          format: org_id:user_id:query_uuid
          type: string
        query_result_id:
          description: Same as `result` above.
          example: 7ae47ad7-c401-4c2e-884e-51249058b9b3
          format: UUID
          type: string
        result:
          description: Result ID. This is `null` unless the job has a `SUCCESS` status
            (code 3). This is the UUID for the query result object that was cached
            following this query run.
          example: 7ae47ad7-c401-4c2e-884e-51249058b9b3
          format: UUID
          type: string
        status:
          description: '

            1. `PENDING` (waiting to run)

            2. `STARTED` (running)

            3. `SUCCESS`

            4. `FAILURE`

            5. `CANCELLED` '
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          example: 3
          type: integer
        updated_at:
          description: Timestamp when this job was last updated by Databricks SQL.
          format: date-time
          type: string
      type: object
    number-parameter-value:
      properties:
        name:
          description: The name of this parameter that appears between curly braces
            in the query definition.
          type: string
        value:
          description: An integer or floating-point number.
          type: number
      type: object
    object_id:
      description: A UUID generated by the application.
      example: 2cca1687-60ff-4886-a445-0230578c864d
      format: uuid
      type: string
    object_type:
      description: A singular noun object type
      enum:
      - alert
      - dashboard
      - data_source
      - query
      example: query
      type: string
    object_type_and_id:
      description: An object's type and UUID, separated by a forward slash (/) character.
      example: query/2cca1687-60ff-4886-a445-0230578c864d
      format: <object-type>/<uuid>
      type: string
    object_type_plural:
      description: Always a plural of the object type.
      enum:
      - alerts
      - dashboards
      - data_sources
      - queries
      example: queries
      type: string
    ownable_object_type:
      description: The singular form of the type of object which can be owned.
      enum:
      - alert
      - dashboard
      - query
      example: query
      type: string
    parameter-object:
      properties:
        name:
          description: The literal parameter marker that appears between double curly
            braces in the query text.
          type: string
        title:
          description: The text displayed in a parameter picking widget.
          type: string
        type:
          description: Parameters can have several different types.
          enum:
          - text
          - datetime
          - number
          - dropdown-list
          type: string
          value:
            description: The default value for this parameter.
            type: string
      type: object
    permission_level:
      enum:
      - CAN_VIEW
      - CAN_RUN
      - CAN_MANAGE
      type: string
    query-object:
      properties:
        api_key:
          description: This field is unsupported and is for internal use only.
          type: string
        can_edit:
          description: Describes whether the authenticated user may edit the definition
            of this query.
          example: true
          type: boolean
        created_at:
          description: The timestamp when this query was created.
          example: '2020-12-15T18:39:15.837Z'
          format: date-time
          type: string
        data_source_id:
          description: Data Source ID. The UUID that uniquely identifies this data
            source / SQL warehouse across the API.
          example: 0c205e24-5db2-4940-adb1-fb13c7ce960b
          format: UUID
          type: string
        description:
          description: General description that conveys additional information about
            this query such as usage notes.
          example: Summarizes total order dollars for customers in the Europe/Asia
            region.
          type: string
        id:
          example: dee5cca8-1c79-4b5e-a711-e7f9d241bdf6
          format: uuid
          type: string
        is_archived:
          description: Whether the query is trashed. Trashed queries can't be used
            in dashboards, or appear in search results. If this boolean is `true`,
            the `options` property for this query will include a `moved_to_trash_at`
            timestamp. Trashed queries are permanently deleted after 30 days.
          type: boolean
        is_draft:
          description: Whether the query is a draft. Draft queries only appear in
            list views for their owners. Visualizations from draft queries cannot
            appear on dashboards.
          type: boolean
        is_favorite:
          description: Whether this query object appears in the current user's favorites
            list. This flag determines whether the star icon for favorites is colored
            in.
          example: true
          type: boolean
        is_safe:
          description: Text parameter types are not safe from SQL injection for all
            types of data source. Set this Boolean parameter to `true` if a query
            either does not use any text type parameters or uses a data source type
            where text type parameters are handled safely.
          example: false
          type: boolean
        last_modified_by:
          $ref: '#/components/schemas/user-object'
        last_modified_by_id:
          description: The ID of the user who last saved changes to this query.
          example: 899619779028913
          type: integer
        latest_query_data_id:
          description: If there is a cached result for this query and user, this field
            includes the query result ID. If this query uses parameters, this field
            is always null.
          example: ab281b1a-527a-4789-bcf7-cfc3ba08d910
          format: uuid
          type: string
        name:
          description: The title of this query that appears in list views, widget
            headings, and on the query page.
          example: Orders by month by customer
          type: string
        options:
          properties:
            moved_to_trash_at:
              description: The timestamp when this query was moved to trash. Only
                present when the `is_archived` property is `true`. Trashed items are
                deleted after thirty days.
              example: '2020-12-15T18:39:15.837Z'
              format: date-time
              type: string
            parameters:
              items:
                anyOf:
                - $ref: '#/components/schemas/parameter-object'
              type: array
          type: object
        permission_tier:
          $ref: '#/components/schemas/permission_level'
        query:
          description: The text of the query to be run.
          example: SELECT field FROM table WHERE field = {{ param }}
          type: string
        query_hash:
          description: A SHA-256 hash of the query text along with the authenticated
            user ID.
          example: 08314a3361c4795528acd1139a2b7c58
          type: string
        schedule:
          $ref: '#/components/schemas/query_interval_object'
        tags:
          items:
            anyOf:
            - $ref: '#/components/schemas/tag-string'
          type: array
        updated_at:
          description: The timestamp at which this query was last updated.
          example: '2021-01-07T20:29:24.289Z'
          format: date-time
          type: string
        user:
          $ref: '#/components/schemas/user-object'
        user_id:
          description: The ID of the user who created this query.
          example: 899619779028913
          type: integer
        version:
          description: Unused field.
          type: string
        visualizations:
          items:
            anyOf:
            - $ref: '#/components/schemas/visualization-object'
          type: array
      type: object
    query-post-content:
      properties:
        data_source_id:
          description: The ID of the data source / SQL warehouse where this query
            will run.
          example: 2cca1687-60ff-4886-a445-0230578c864d
          format: UUID
          type: string
        description:
          description: General description that can convey additional information
            about this query such as usage notes.
          example: Summarizes total order dollars for customers in the Europe/Asia
            region.
          type: string
        name:
          description: The name or title of this query to display in list views.
          example: Orders by month by customer
          type: string
        options:
          description: Exclusively used for storing a list parameter definitions.
            A parameter is an object with `title`, `name`, `type`, and `value` properties.
            The `value` field here is the default value. It can be overridden at runtime.
          example:
            parameters:
            - name: param
              title: customer
              type: text
              value: acme
          type: object
        query:
          description: The text of the query.
          example: SELECT field FROM table WHERE field = {{ param }}
          type: string
        schedule:
          description: JSON object that describes the scheduled execution frequency.
            A schedule object includes `interval`, `time`, `day_of_week`, and `until`
            fields. If a scheduled is supplied, then only `interval` is required.
            All other field can be `null`.
          example:
            day_of_week: Wednesday
            interval: 86400
            time: 06:15
            until: '1991-08-03'
          schema:
            $ref: '#/components/schemas/query_interval_object'
          type: object
      type: object
    query-result-column-description:
      example:
        friendly_name: Original Date
        name: orig_date
        type: datetime
      properties:
        friendly_name:
          type: string
        name:
          type: string
        type:
          type: string
      type: object
    query-result-object:
      description: A JSON response body that contains a serialized result table.
      properties:
        query_result:
          properties:
            data:
              description: Serialized tabular data from this query.
              properties:
                columns:
                  items:
                    anyOf:
                    - $ref: '#/components/schemas/query-result-column-description'
                  type: array
                rows:
                  items:
                    anyOf:
                    - $ref: '#/components/schemas/query-result-row-description'
                  type: array
              type: object
            data_source_id:
              example: af574c41-045c-4d50-b078-67d78b766128
              format: UUID
              type: string
            id:
              description: The UUID for this cached query result. Each cached result
                is keyed with the current user name and query text.
              example: 06192bfa-cd91-4b57-9a81-df98be5570c2
              format: UUID
              type: string
            query:
              description: The complete query that generated this result, including
                parameter values used at runtime.
              example: SELECT field FROM table WHERE field = 100
              type: string
            query_hash:
              description: A SHA-256 hash of the query text that generated this result,
                including actual parameter values.
              example: 08314a3361c4795528acd1139a2b7c58
              type: string
            retrieved_at:
              description: Timestamp when this result was retreived from the database.
              example: '1991-08-03T13:02:35.916Z'
              format: date-time
              type: string
            runtime:
              description: Query run time in seconds.
              example: 0.850272178649902
              type: float
          type: object
      type: object
    query-result-row-description:
      description: A JSON object whose keys are the names of each column in this query
        result and whose values constitute a single row of the result.
      example:
      - orig_date: '1991-08-03T00:00:00.000Z'
        value: 0
      type: object
    query_interval_object:
      properties:
        day_of_week:
          default: null
          description: For weekly runs, a day of the week for run to start.
          example: Wednesday
        interval:
          description: Integer number of seconds between runs.
          example: 900
          type: integer
        time:
          default: null
          description: For daily, weekly, and monthly runs, the time-of-day for run
            to start.
          example: 00:15
        until:
          default: null
          description: A date after which this schedule no longer applies.
          example: '2021-01-07'
      type: object
    tag-string:
      description: Tags can be applied to dashboards and queries. They are used for
        filtering list views.
      example: Payroll
      type: string
    text-parameter-value:
      properties:
        name:
          description: The name of this parameter that appears between curly braces
            in the query definition.
          type: string
        value:
          description: The parameter value as text.
          type: string
      type: object
    user-object:
      properties:
        email:
          example: user@example.com
          format: email
          type: string
        id:
          example: 899619779028913
          type: integer
        is_db_admin:
          description: Whether this user is an admin in the Databricks workspace.
          example: true
          type: boolean
        name:
          example: user@example.com
          type: string
        profile_image_url:
          description: The URL for the gravatar profile picture tied to this user's
            email address
          example: https://www.gravatar.com/avatar/732f2b4824846f9a0253f233e0d79bf0?s=40&d=identicon
          format: url
          type: string
      type: object
    user_acl:
      properties:
        permission_level:
          $ref: '#/components/schemas/permission_level'
        user_name:
          format: email
          type: string
      type: object
    visualization-object:
      description: The visualization description API changes frequently and is unsupported.
        You can duplicate a visualization by copying description objects received
        _from the API_ and then using them to create a new one with a POST request
        to the same endpoint. Databricks does not recommend constructing ad-hoc visualizations
        entirely in JSON.
      properties:
        created_at:
          format: date-time
          type: string
        description:
          description: A short description of this visualization. This is not displayed
            in the UI.
          example: A table of data from this query.
          type: string
        id:
          description: The integer ID for this visualization.
          example: 29830
          type: integer
        name:
          description: The name of the visualization that appears on dashboards and
            the query screen.
          example: Chart
          type: string
        options:
          description: The options object varies widely from one visualization type
            to the next and is unsupported. Databricks does not recommend modifying
            visualization settings in JSON.
          type: object
        type:
          description: 'The type of visualization: chart, table, pivot table, and
            so on.'
          example: TABLE
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
    widget-object:
      properties:
        id:
          description: The unique ID for this widget.
          example: 11536
          type: integer
        options:
          properties:
            created_at:
              description: Timestamp when this object was created
              format: date-time
              type: text
            dashboard_id:
              description: The dashboard ID to which this widget belongs. Each widget
                can belong to one dashboard.
              example: a6d3a7a9-693d-472f-96b2-912622c2ffcd
              format: UUID
              type: text
            isHidden:
              default: false
              description: Whether this widget is hidden on the dashboard.
              example: false
              type: boolean
            parameterMappings:
              description: How parameters used by the visualization in this widget
                relate to other widgets on the dashboard. Databricks does not recommend
                modifying this definition in JSON.
              example:
                param:
                  mapTo: param
                  name: param
                  title: This is a parameter
                  type: dashboard-level
                  value: null
              type: object
            position:
              description: Coordinates of this widget on a dashboard. This portion
                of the API changes frequently and is unsupported.
              type: object
            text:
              default: null
              description: If this is a textbox widget, the application displays this
                text. This field is ignored if the widget contains a visualization
                in the `visualization` field.
              type: text
            updated_at:
              description: Timestamp of the last time this object was updated.
              format: date-time
              type: text
          type: object
        visualization:
          $ref: '#/components/schemas/visualization-object'
        width:
          description: Unused field.
          example: 1
          type: integer
      type: object
info:
  description: 'This feature is in [Public Preview](https://docs.databricks.com/release-notes/release-types.html).


    **Important:** To access Databricks REST APIs, you must [authenticate](https://docs.databricks.com/sql/api/authentication.html)

    '
  title: Queries and Dashboards API
  version: 2
openapi: 3.0.0
paths:
  /dashboards:
    get:
      description: null
      operationId: get-sql-analytics-dashboards
      parameters:
      - description: Number of dashboards to return per page.
        in: query
        name: page_size
        required: false
        schema:
          example: 50
          type: integer
      - description: Page number to retrieve.
        in: query
        name: page
        required: false
        schema:
          example: 1
          type: integer
      - description: Name of dashboard attribute to order by.
        in: query
        name: order
        required: false
        schema:
          enum:
          - name
          - created_at
          type: string
      - description: Full text search term.
        in: query
        name: q
        required: false
        schema:
          example: orders by month
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  count:
                    description: The total number of dashboards.
                    example: 1
                    type: integer
                  page:
                    description: The current page being displayed.
                    example: 1
                    type: integer
                  page_size:
                    description: The number of dashboards per page.
                    example: 25
                    type: integer
                  results:
                    description: List of dashboards returned.
                    items:
                      anyOf:
                      - $ref: '#/components/schemas/dashboard-object'
                    type: array
                type: object
      summary: Fetch a paginated list of dashboard objects
      tags:
      - Dashboards
    post:
      operationId: sql-analytics-create-dashboard
      requestBody:
        content:
          application/json:
            schema:
              properties:
                dashboard_filters_enabled:
                  default: false
                  description: In the web application, query filters that share a
                    name are coupled to a single selection box if this value is true.
                  example: false
                  required:
                  - false
                  type: boolean
                is_draft:
                  description: Draft dashboards only appear in list views for their
                    owners.
                  is_draft: true
                  required:
                  - false
                  type: boolean
                is_trashed:
                  description: Whether the dashboard is trashed. Trashed dashboards
                    won't appear in list views.
                  example: false
                  required:
                  - false
                  type: boolean
                layout:
                  description: Currently unused. In a previous version of this API
                    `layout` contained information for arranging widgets on the grid.
                  example: []
                  required:
                  - false
                  type: array
                name:
                  description: The title of this dashboard which appears in list views
                    and at the top of the dashboard page.
                  example: Sales Dashboard
                  required:
                  - true
                  type: string
                tags:
                  items:
                    anyOf:
                    - $ref: '#/components/schemas/tag-string'
                  required:
                  - false
                  type: array
                widgets:
                  description: An array of widget objects. A complete description
                    of widget objects can be found in the response to [Retrieve A
                    Dashboard Definition](#operation/sql-analytics-fetch-dashboard).
                    Databricks does not recommend creating new widgets via this API.
                  required:
                  - false
                  type: array
              type: object
        description: Only the `name` parameter is required in the POST request JSON
          body. Other fields can be included when duplicating dashboards with this
          API. Databricks does not recommend designing dashboards exclusively using
          this API.
        is_favorite:
          description: Whether this query object should appear in the current user's
            favorites list. The application uses this flag to determine whether or
            not the "favorite star " should be colored.
          type: boolean
        refresh_schedules:
          description: Current undocumented while back-end dashboard refresh is under
            development.
          example: []
          type: array
        required:
        - true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dashboard-object'
          summary: A dashboard object was successfully created
      summary: Create a new dashboard object
      tags:
      - Dashboards
  /dashboards/trash/{dashboardId}:
    post:
      description: A restored dashboard appears in list views and searches and can
        be shared.
      operationId: sql-analytics-restore-trashed-dashboard
      responses:
        '200':
          content:
            application/json:
              schema:
                example: null
                type: string
          summary: Dashboard restored successfully
      summary: Restore a trashed dashboard
      tags:
      - Dashboards
  /dashboards/{dashboardId}:
    delete:
      description: Trashed dashboards do not appear in list views or searches and
        cannot be shared.
      operationId: sql-analytics-trash-dashboard
      responses:
        '200':
          content:
            application/json:
              schema:
                example: null
                type: string
          summary: Dashboard successfully moved to trash
      summary: Move a dashboard to the trash
      tags:
      - Dashboards
    get:
      description: Returns a JSON representation of a dashboard object, including
        its visualization and query objects.
      operationId: sql-analytics-fetch-dashboard
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dashboard-object'
          summary: Dashboard fetched successfully
      summary: Retrieve a dashboard definition
      tags:
      - Dashboards
  /data_sources:
    get:
      description: Retrieve a full list of SQL warehouses available in this workspace.
        All fields that appear in this API response are enumerated for clarity. However,
        you will only need a SQL warehouse's `id` to create new queries against it.
      operationId: get-sql-analytics-data-sources
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  anyOf:
                  - $ref: '#/components/schemas/data-source-object'
                type: array
      summary: Fetch a list of SQL warehouses
      tags:
      - Data Sources
  /permissions/{objectType}/{objectId}:
    description: Fetches the access control list (ACL) for a specific object.
    get:
      description: Returns a JSON representation of the access control list (ACL)
        for a specified object.
      operationId: get-sql-analytics-object-permissions
      parameters:
      - description: The type of object permissions to check.
        in: path
        name: objectType
        required: true
        schema:
          $ref: '#/components/schemas/object_type_plural'
      - description: Object ID. An ACL will be returned for the object with this UUID.
        in: path
        name: objectId
        required: true
        schema:
          $ref: '#/components/schemas/object_id'
      responses:
        '200':
          $ref: '#/components/responses/access-control-list-response'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      summary: Get object access control list
      tags:
      - ACL / Permissions
    post:
      description: Completely rewrite the access control list for a specified object.
      operationId: set-sql-analytics-object-permissions
      parameters:
      - description: The type of object permission to set.
        in: path
        name: objectType
        required: true
        schema:
          $ref: '#/components/schemas/object_type_plural'
      - description: Object ID. The ACL for the object with this UUID will be overwritten
          by this request's POST content.
        in: path
        name: objectId
        required: true
        schema:
          $ref: '#/components/schemas/object_id'
      requestBody:
        content:
          access_control_list:
            schema:
              $ref: '#/components/schemas/access_control_list'
        description: An ACL list to be applied to the object specified in the URL.
        required:
        - true
      responses:
        '200':
          $ref: '#/components/responses/access-control-list-response'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      summary: Set object access control list
      tags:
      - ACL / Permissions
  /permissions/{objectType}/{objectId}/transfer:
    description: Transfer ownership of a single object.
    post:
      description: Transfer ownership of a dashboard, query, or alert to an active
        user. Requires an admin API key.
      operationId: set-sql-analytics-object-owner
      parameters:
      - description: The type of object on which to change ownership.
        in: path
        name: objectType
        required: true
        schema:
          $ref: '#/components/schemas/ownable_object_type'
      - description: The ID of the object on which to change ownership.
        in: path
        name: objectId
        required: true
        schema:
          properties:
            new_owner:
              description: Email address for the new owner, who must exist in the
                workspace.
              example: user@example.com
              format: email
              type: string
          type: object
      requestBody:
        content:
          application/json:
            schema:
              properties:
                new_owner:
                  description: Email address for the new owner, who must exist in
                    the workspace.
                  example: user@example.com
                  format: email
                  type: string
              type: object
        description: Email address for the new owner, who must exist in the workspace.
        required:
        - true
      responses:
        '200':
          $ref: '#/components/responses/generic-success-message'
        '400':
          $ref: '#/components/responses/ObjectTransferBadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      summary: Transfer object ownership
      tags:
      - ACL / Permissions
  /queries:
    description: This endpoint can search and filter query objects or to create a
      new query object.
    get:
      description: Optionally this list can be filtered by a search term.
      operationId: sql-analytics-get-queries
      parameters:
      - description: Number of queries to return per page.
        in: query
        name: page_size
        required: false
        schema:
          example: 50
          type: integer
      - description: Page number to retrieve.
        in: query
        name: page
        required: false
        schema:
          example: 1
          type: integer
      - description: "Name of query attribute to order by. Default sort order is ascending.\
          \ Append a dash (`-`) to order descending instead. \n\n- `name`: The name\
          \ of the query. \n\n- `created_at`: The timestamp the query was created.\
          \ \n\n- `schedule`: The refresh interval for each query. For example: \"\
          Every 5 Hours\" or \"Every 5 Minutes\". \"Never\" is treated as the highest\
          \ value for sorting. \n\n- `runtime`: The time it took to run this query.\
          \ This will be blank for parameterized queries. A blank value is treated\
          \ as the highest value for sorting. \n\n- `executed_at`: The timestamp when\
          \ the query was last run. \n\n- `created_by`: The user name of the user\
          \ that created the query. \n "
        in: query
        name: order
        required: false
        schema:
          enum:
          - name
          - -name
          - created_at
          - -created_at
          - schedule
          - -schedule
          - runtime
          - -runtime
          - executed_at
          - -executed_at
          - created_by
          - -created_by
          type: string
      - description: Full text search term
        in: query
        name: q
        required: false
        schema:
          example: orders by month
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  count:
                    description: The total number of queries.
                    example: 1
                    type: integer
                  page:
                    description: The page number that is currently displayed.
                    example: 1
                    type: integer
                  page_size:
                    description: The number of queries per page.
                    example: 25
                    type: integer
                  results:
                    description: List of queries returned.
                    items:
                      anyOf:
                      - $ref: '#/components/schemas/query-object'
                    type: array
                type: object
      summary: Retrieve a list of queries
      tags:
      - Queries / Results
    post:
      description: 'Queries created with this endpoint belong to the authenticated
        user making the request.


        The `data_source_id` field specifies the id of the SQL warehouse against which
        this query will run. You can use the Data Sources API to see a complete list
        of available SQL warehouses. Or you can copy the `data_source_id` from an
        existing query.


        **Note**: You cannot add a visualization until you create the query.

        '
      operationID: sql-analytics-create-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/query-post-content'
        description: A query object to be created.
        required:
        - true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query-object'
          summary: Query created successfully
      summary: Create a new query definition
      tags:
      - Queries / Results
  /queries/trash/{queryID}:
    post:
      description: A restored query appears in list views and searches. You can use
        restored queries for alerts.
      operationId: sql-analytics-restore-trashed-query
      responses:
        '200':
          content:
            application/json:
              schema:
                example: null
                type: string
          summary: Query restored successfully
      summary: Restore a trashed query
      tags:
      - Queries / Results
  /queries/{queryID}:
    delete:
      description: Trashed queries immediately disappear from searches and list views
        and cannot be used for alerts. The trash is deleted after 30 days.
      operationId: sql-analytics-trash-query
      responses:
        '200':
          content:
            application/json:
              schema:
                example: null
                type: string
          summary: Query moved to trash
      summary: Move a query to the trash
      tags:
      - Queries / Results
    get:
      description: Retrieve a query object definition along with contextual permissions
        information about the currently authenticated user.
      operationId: sql-analytics-get-query
      parameters:
      - in: path
        name: queryID
        schema:
          example: 2cca1687-60ff-4886-a445-0230578c864d
          format: UUID
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query-object'
          summary: Query fetched successfully
      summary: Retrieve a query definition.
      tags:
      - Queries / Results
    post:
      description: 'Modify this query definition.


        **Note**: You cannot undo this operation.'
      operationId: sql-analytics-change-query
      parameters:
      - in: path
        name: queryID
        schema:
          example: 2cca1687-60ff-4886-a445-0230578c864d
          format: UUID
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/query-post-content'
        description: The query definition that will replace the current definition
          for this `queryID`.
        required:
        - true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query-object'
          summary: Query changed successfully
      summary: Change a query definition
      tags:
      - Queries / Results
servers:
- description: In the URL, substitute `<databricks-instance>` with the domain name
    of your deployment. Use the form `<account>.cloud.databricks.com`.
  url: https://<databricks-instance>/api/2.0/preview/sql
tags:
- description: These endpoints are used for CRUD operations on query definitions.
    Query definitions include the target SQL warehouse, query text, name, description,
    tags, execution schedule, parameters, and visualizations.
  name: Queries / Results
- description: In general, there is little need to modify dashboards using the API.
    However, it can be useful to use dashboard objects to look-up a collection of
    related query IDs. The API can also be used to duplicate multiple dashboards at
    once since you can get a dashboard definition with a GET request and then POST
    it to create a new one.
  name: Dashboards
- description: 'The SQL Permissions API is similar to the endpoints of the [Permissions
    API](https://docs.databricks.com/dev-tools/api/latest/permissions.html). However,
    this exposes only one endpoint, which gets the Access Control List for a given
    object. You cannot modify any permissions using this API.


    There are three levels of permission:


    - `CAN_VIEW`: Allows read-only access


    - `CAN_RUN`: Allows read access and run access (superset of `CAN_VIEW`)


    - `CAN_MANAGE`: Allows all actions: read, run, edit, delete, modify permissions
    (superset of `CAN_RUN`)

    '
  name: ACL / Permissions
- description: 'This API is provided to assist you in making new query objects. When
    creating a query object, you may optionally specify a `data_source_id` for the
    SQL warehouse against which it will run. If you don''t already know the `data_source_id`
    for your desired SQL warehouse, this API will help you find it.


    This API does not support searches. It returns the full list of SQL warehouses
    in your workspace. We advise you to use any text editor, REST client, or `grep`
    to search the response from this API for the name of your SQL warehouse as it
    appears in Databricks SQL.

    '
  name: Data Sources
